services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - 15672:15672
    networks:
      - net
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    logging:
      driver: none
    healthcheck: 
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 5

  client1:
    container_name: client1
    image: client:latest
    entrypoint: python3 /main.py 
    volumes:
      - ./data/:/data 
    networks:
      - net 
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
  # ---------------------------------------- Query 1 ---------------------------------------------
  filter_columns:
    image: filter_columns:latest
    container_name: filter_columns
    environment:
      - NODE_ID=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net
    restart: on-failure

  q1_counter:
    container_name: q1_counter
    image: counter:latest
    entrypoint: python3 /main.py
    environment:
      - NODE_ID=1
      - CONSUME_QUEUE_SUFIX=q1_platform
      - PUBLISH_QUEUE=Q1
    networks:
      - net 
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  drop_nulls:
    image: drop_nulls:latest
    container_name: drop_nulls
    environment:
      - NODE_ID=1
      - COUNT_BY_PLATFORM_NODES=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net
    restart: on-failure
  # ---------------------------------------- Query 2 ---------------------------------------------

  q2_top_k:
      image: top_k:latest
      container_name: q2_top_k
      depends_on:
        rabbitmq:
          condition: service_healthy
      environment:
        - INPUT_TOP_K_QUEUE_NAME=1_q2_indie_games_from_last_decade
        - OUTPUT_TOP_K_QUEUE_NAME=Q2
        - K=10
      networks:
        - net
      restart: on-failure

  q2_filter_indie_games:
    image: filter_by_column_value:latest
    container_name: q2_filter_indie_games
    environment:
      - RECIVING_QUEUE_NAME=q2_games
      - FORWARDING_QUEUE_NAME=q2_indie_games
      - AMOUNT_OF_FORWARDING_QUEUES=1
      - LOGGING_LEVEL=DEBUG
      - COLUMN_NUMBER_TO_USE=4 # genre
      - VALUE_TO_FILTER_BY=indie
      - CRITERIA=CONTAINS
      - COLUMNS_TO_KEEP=0,1,2,3 # app_id, name, release_date, avg_forever
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net
    restart: on-failure

  q2_filter_indie_games_from_last_decade:
    image: filter_by_column_value:latest
    container_name: q2_filter_indie_games_from_last_decade
    environment:
      - RECIVING_QUEUE_NAME=1_q2_indie_games
      - FORWARDING_QUEUE_NAME=q2_indie_games_from_last_decade
      - AMOUNT_OF_FORWARDING_QUEUES=1
      - LOGGING_LEVEL=DEBUG
      - COLUMN_NUMBER_TO_USE=2 # release date
      - VALUE_TO_FILTER_BY=201
      - CRITERIA=CONTAINS
      - COLUMNS_TO_KEEP=1,3 # name, avg_forever
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net
    restart: on-failure
  # ---------------------------------------- Query 3 ---------------------------------------------

  q3_filter_indie_games:
    image: filter_by_column_value:latest
    container_name: q3_filter_indie_games
    environment:
      - RECIVING_QUEUE_NAME=q3_games
      - FORWARDING_QUEUE_NAME=q3_indie_games
      - AMOUNT_OF_FORWARDING_QUEUES=1
      - LOGGING_LEVEL=DEBUG
      - COLUMN_NUMBER_TO_USE=2 # Genre
      - VALUE_TO_FILTER_BY=indie
      - CRITERIA=CONTAINS
      - COLUMNS_TO_KEEP=0,1 # app_id, name
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net
    restart: on-failure

  q3_filter_positive:
    image: filter_by_column_value:latest
    container_name: q3_filter_positive
    environment:
      - RECIVING_QUEUE_NAME=q3_reviews
      - FORWARDING_QUEUE_NAME=q3_positive_reviews
      - AMOUNT_OF_FORWARDING_QUEUES=1
      - LOGGING_LEVEL=DEBUG
      - COLUMN_NUMBER_TO_USE=1 # review_score
      - VALUE_TO_FILTER_BY=1.0 # positive review
      - CRITERIA=EQUAL
      - COLUMNS_TO_KEEP=0 # app_id
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net
    restart: on-failure

  q3_top_k:
    image: top_k:latest
    container_name: q3_top_k
    depends_on:
      rabbitmq:
        condition: service_healthy
    environment:
      - INPUT_TOP_K_QUEUE_NAME=1_q3_join_by_app_id_result
      - OUTPUT_TOP_K_QUEUE_NAME=Q3
      - K=5
    networks:
      - net
    restart: on-failure

  q3_counter:
    container_name: q3_counter
    image: counter:latest
    entrypoint: python3 /main.py
    environment:
      - NODE_ID=1
      - CONSUME_QUEUE_SUFIX=q3_positive_reviews
      - PUBLISH_QUEUE=q3_positive_review_count
    networks:
      - net 
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  q3_join:
    container_name: q3_join
    image: join:latest
    networks:
      - net 
    environment:
      - INPUT_GAMES_QUEUE_NAME=1_q3_indie_games
      - INPUT_REVIEWS_QUEUE_NAME=q3_positive_review_count
      - OUTPUT_QUEUE_NAME=1_q3_join_by_app_id_result
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
  # ---------------------------------------- Query 4 ---------------------------------------------
  q4_filter_shooter_games:
    image: filter_by_column_value:latest
    container_name: q4_filter_action_games
    environment:
      - RECIVING_QUEUE_NAME=q4_games
      - FORWARDING_QUEUE_NAME=q4_shooter_games
      - AMOUNT_OF_FORWARDING_QUEUES=1
      - LOGGING_LEVEL=DEBUG
      - COLUMN_NUMBER_TO_USE=2 # Genre
      - VALUE_TO_FILTER_BY=action
      - CRITERIA=CONTAINS
      - COLUMNS_TO_KEEP=0,1 # app_id, name
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net
    restart: on-failure

  q4_filter_positive:
    image: filter_by_column_value:latest
    container_name: q4_filter_positive
    environment:
      - RECIVING_QUEUE_NAME=q4_reviews
      - FORWARDING_QUEUE_NAME=q4_positive_reviews
      - AMOUNT_OF_FORWARDING_QUEUES=1
      - LOGGING_LEVEL=DEBUG
      - COLUMN_NUMBER_TO_USE=2 # review_score
      - VALUE_TO_FILTER_BY=1.0 # positive review
      - CRITERIA=EQUAL
      - COLUMNS_TO_KEEP=0,1,2 # app_id, review_score, review
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net
    restart: on-failure

  q4_filter_by_english:
    image: filter_by_column_value:latest
    container_name: q4_filter_by_english
    environment:
      - RECIVING_QUEUE_NAME=1_q4_positive_reviews
      - FORWARDING_QUEUE_NAME=q4_english_reviews
      - AMOUNT_OF_FORWARDING_QUEUES=1
      - LOGGING_LEVEL=DEBUG
      - COLUMN_NUMBER_TO_USE=2 # review
      - VALUE_TO_FILTER_BY=EN # english
      - CRITERIA=LANGUAGE
      - COLUMNS_TO_KEEP=0,1 # app_id, review_score
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net
    restart: on-failure
    
  q4_counter:
    container_name: q4_counter
    image: counter:latest
    entrypoint: python3 /main.py
    environment:
      - NODE_ID=1
      - CONSUME_QUEUE_SUFIX=q4_english_reviews
      - PUBLISH_QUEUE=q4_english_review_count
    networks:
      - net 
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

  q4_filter_more_than_5000:
    image: filter_by_column_value:latest
    container_name: q4_filter_more_than_5000
    environment:
      - RECIVING_QUEUE_NAME=q4_english_review_count
      - FORWARDING_QUEUE_NAME=q4_filter_more_than_5000_reviews
      - AMOUNT_OF_FORWARDING_QUEUES=1
      - LOGGING_LEVEL=DEBUG
      - COLUMN_NUMBER_TO_USE=1 # positive_review_count
      - VALUE_TO_FILTER_BY=5000  
      - CRITERIA=GREATER_THAN
      - COLUMNS_TO_KEEP=0,1 # app_id, positive_review_count
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - net
    restart: on-failure

  q4_join:
    container_name: q4_join
    image: join:latest
    networks:
      - net 
    environment:
      - INPUT_GAMES_QUEUE_NAME=1_q4_shooter_games
      - INPUT_REVIEWS_QUEUE_NAME=1_q4_filter_more_than_5000_reviews
      - OUTPUT_QUEUE_NAME=Q4
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure

volumes:
  rabbitmq_data:

networks:
  net:
    ipam:
      driver: default
      config:
        - subnet: 172.25.125.0/24
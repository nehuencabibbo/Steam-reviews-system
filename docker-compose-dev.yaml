name: steam_reviews_system
services:
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
    - 15672:15672
    networks:
    - net
    volumes:
    - rabbitmq_data:/var/lib/rabbitmq
    logging:
      driver: none
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: '5'
  client1:
    container_name: client1
    image: client:latest
    entrypoint: python3 /main.py
    volumes:
    - ./data/:/data
    networks:
    - net
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: on-failure
  filter_columns0:
    image: filter_columns:latest
    container_name: filter_columns0
    environment:
    - NODE_ID=0
    - INSTANCES_OF_MYSELF=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  filter_columns1:
    image: filter_columns:latest
    container_name: filter_columns1
    environment:
    - NODE_ID=1
    - INSTANCES_OF_MYSELF=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  filter_columns2:
    image: filter_columns:latest
    container_name: filter_columns2
    environment:
    - NODE_ID=2
    - INSTANCES_OF_MYSELF=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  filter_columns3:
    image: filter_columns:latest
    container_name: filter_columns3
    environment:
    - NODE_ID=3
    - INSTANCES_OF_MYSELF=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  filter_columns4:
    image: filter_columns:latest
    container_name: filter_columns4
    environment:
    - NODE_ID=4
    - INSTANCES_OF_MYSELF=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  drop_columns0:
    image: drop_nulls:latest
    container_name: drop_nulls0
    environment:
    - NODE_ID=0
    - COUNT_BY_PLATFORM_NODES=1
    - INSTANCES_OF_MYSELF=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  drop_columns1:
    image: drop_nulls:latest
    container_name: drop_nulls1
    environment:
    - NODE_ID=1
    - COUNT_BY_PLATFORM_NODES=1
    - INSTANCES_OF_MYSELF=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  drop_columns2:
    image: drop_nulls:latest
    container_name: drop_nulls2
    environment:
    - NODE_ID=2
    - COUNT_BY_PLATFORM_NODES=1
    - INSTANCES_OF_MYSELF=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  drop_columns3:
    image: drop_nulls:latest
    container_name: drop_nulls3
    environment:
    - NODE_ID=3
    - COUNT_BY_PLATFORM_NODES=1
    - INSTANCES_OF_MYSELF=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  drop_columns4:
    image: drop_nulls:latest
    container_name: drop_nulls4
    environment:
    - NODE_ID=4
    - COUNT_BY_PLATFORM_NODES=1
    - INSTANCES_OF_MYSELF=5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q1_counter0:
    container_name: q1_counter0
    image: counter_by_platform:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=0
    - CONSUME_QUEUE_SUFIX=q1_platform
    - PUBLISH_QUEUE=Q1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q2_filter_indie_games0:
    image: filter_by_column_value:latest
    container_name: q2_indie_games0
    environment:
    - NODE_ID=0
    - RECIVING_QUEUE_NAME=q2_games
    - FORWARDING_QUEUE_NAME=q2_indie_games
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=4
    - VALUE_TO_FILTER_BY=indie
    - CRITERIA=CONTAINS
    - COLUMNS_TO_KEEP=0,1,2,3
    - INSTANCES_OF_MYSELF=2
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q2_filter_indie_games1:
    image: filter_by_column_value:latest
    container_name: q2_indie_games1
    environment:
    - NODE_ID=1
    - RECIVING_QUEUE_NAME=q2_games
    - FORWARDING_QUEUE_NAME=q2_indie_games
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=4
    - VALUE_TO_FILTER_BY=indie
    - CRITERIA=CONTAINS
    - COLUMNS_TO_KEEP=0,1,2,3
    - INSTANCES_OF_MYSELF=2
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q2_filter_indie_games_from_last_decade0:
    image: filter_by_column_value:latest
    container_name: q2_indie_games_from_last_decade0
    environment:
    - NODE_ID=0
    - RECIVING_QUEUE_NAME=0_q2_indie_games
    - FORWARDING_QUEUE_NAME=q2_indie_games_from_last_decade
    - AMOUNT_OF_FORWARDING_QUEUES=2
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=2
    - VALUE_TO_FILTER_BY=201
    - CRITERIA=CONTAINS
    - COLUMNS_TO_KEEP=1,3
    - INSTANCES_OF_MYSELF=2
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q2_filter_indie_games_from_last_decade1:
    image: filter_by_column_value:latest
    container_name: q2_indie_games_from_last_decade1
    environment:
    - NODE_ID=1
    - RECIVING_QUEUE_NAME=0_q2_indie_games
    - FORWARDING_QUEUE_NAME=q2_indie_games_from_last_decade
    - AMOUNT_OF_FORWARDING_QUEUES=2
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=2
    - VALUE_TO_FILTER_BY=201
    - CRITERIA=CONTAINS
    - COLUMNS_TO_KEEP=1,3
    - INSTANCES_OF_MYSELF=2
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q2_top_k0:
    image: top_k:latest
    container_name: q2_top_k0
    environment:
    - INPUT_TOP_K_QUEUE_NAME=q2_indie_games_from_last_decade
    - OUTPUT_TOP_K_QUEUE_NAME=0_q2_top_aggregator
    - K=10
    - NODE_ID=0
    - AMOUNT_OF_RECEIVING_QUEUES=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q2_top_k1:
    image: top_k:latest
    container_name: q2_top_k1
    environment:
    - INPUT_TOP_K_QUEUE_NAME=q2_indie_games_from_last_decade
    - OUTPUT_TOP_K_QUEUE_NAME=0_q2_top_aggregator
    - K=10
    - NODE_ID=1
    - AMOUNT_OF_RECEIVING_QUEUES=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q2_aggregator_top_k0:
    image: top_k:latest
    container_name: q2_aggregator_top_k0
    environment:
    - INPUT_TOP_K_QUEUE_NAME=q2_top_aggregator
    - OUTPUT_TOP_K_QUEUE_NAME=Q2
    - K=10
    - NODE_ID=0
    - AMOUNT_OF_RECEIVING_QUEUES=2
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_filter_indie_games0:
    image: filter_by_column_value:latest
    container_name: q3_indie_games0
    environment:
    - NODE_ID=0
    - RECIVING_QUEUE_NAME=q3_games
    - FORWARDING_QUEUE_NAME=q3_indie_games
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=2
    - VALUE_TO_FILTER_BY=indie
    - CRITERIA=CONTAINS
    - COLUMNS_TO_KEEP=0,1
    - INSTANCES_OF_MYSELF=2
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_filter_indie_games1:
    image: filter_by_column_value:latest
    container_name: q3_indie_games1
    environment:
    - NODE_ID=1
    - RECIVING_QUEUE_NAME=q3_games
    - FORWARDING_QUEUE_NAME=q3_indie_games
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=2
    - VALUE_TO_FILTER_BY=indie
    - CRITERIA=CONTAINS
    - COLUMNS_TO_KEEP=0,1
    - INSTANCES_OF_MYSELF=2
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_filter_filter_positive0:
    image: filter_by_column_value:latest
    container_name: q3_filter_positive0
    environment:
    - NODE_ID=0
    - RECIVING_QUEUE_NAME=q3_reviews
    - FORWARDING_QUEUE_NAME=q3_positive_reviews
    - AMOUNT_OF_FORWARDING_QUEUES=5
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=1
    - VALUE_TO_FILTER_BY=1.0
    - CRITERIA=EQUAL_FLOAT
    - COLUMNS_TO_KEEP=0
    - INSTANCES_OF_MYSELF=2
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_filter_filter_positive1:
    image: filter_by_column_value:latest
    container_name: q3_filter_positive1
    environment:
    - NODE_ID=1
    - RECIVING_QUEUE_NAME=q3_reviews
    - FORWARDING_QUEUE_NAME=q3_positive_reviews
    - AMOUNT_OF_FORWARDING_QUEUES=5
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=1
    - VALUE_TO_FILTER_BY=1.0
    - CRITERIA=EQUAL_FLOAT
    - COLUMNS_TO_KEEP=0
    - INSTANCES_OF_MYSELF=2
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_counter0:
    container_name: q3_counter0
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=0
    - CONSUME_QUEUE_SUFIX=q3_positive_reviews
    - PUBLISH_QUEUE=q3_positive_review_count
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_counter1:
    container_name: q3_counter1
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=1
    - CONSUME_QUEUE_SUFIX=q3_positive_reviews
    - PUBLISH_QUEUE=q3_positive_review_count
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_counter2:
    container_name: q3_counter2
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=2
    - CONSUME_QUEUE_SUFIX=q3_positive_reviews
    - PUBLISH_QUEUE=q3_positive_review_count
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_counter3:
    container_name: q3_counter3
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=3
    - CONSUME_QUEUE_SUFIX=q3_positive_reviews
    - PUBLISH_QUEUE=q3_positive_review_count
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_counter4:
    container_name: q3_counter4
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=4
    - CONSUME_QUEUE_SUFIX=q3_positive_reviews
    - PUBLISH_QUEUE=q3_positive_review_count
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_join0:
    container_name: q3_join0
    image: join:latest
    environment:
    - INPUT_GAMES_QUEUE_NAME=0_q3_indie_games
    - INPUT_REVIEWS_QUEUE_NAME=q3_positive_review_count
    - OUTPUT_QUEUE_NAME=q3_join_by_app_id_result
    - AMOUNT_OF_BEHIND_NODES=5
    - AMOUNT_OF_FORWARDING_QUEUES=3
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_top_k0:
    image: top_k:latest
    container_name: q3_top_k0
    environment:
    - INPUT_TOP_K_QUEUE_NAME=q3_join_by_app_id_result
    - OUTPUT_TOP_K_QUEUE_NAME=0_q3_top_aggregator
    - K=5
    - NODE_ID=0
    - AMOUNT_OF_RECEIVING_QUEUES=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_top_k1:
    image: top_k:latest
    container_name: q3_top_k1
    environment:
    - INPUT_TOP_K_QUEUE_NAME=q3_join_by_app_id_result
    - OUTPUT_TOP_K_QUEUE_NAME=0_q3_top_aggregator
    - K=5
    - NODE_ID=1
    - AMOUNT_OF_RECEIVING_QUEUES=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_top_k2:
    image: top_k:latest
    container_name: q3_top_k2
    environment:
    - INPUT_TOP_K_QUEUE_NAME=q3_join_by_app_id_result
    - OUTPUT_TOP_K_QUEUE_NAME=0_q3_top_aggregator
    - K=5
    - NODE_ID=2
    - AMOUNT_OF_RECEIVING_QUEUES=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q3_aggregator_top_k0:
    image: top_k:latest
    container_name: q3_aggregator_top_k0
    environment:
    - INPUT_TOP_K_QUEUE_NAME=q3_top_aggregator
    - OUTPUT_TOP_K_QUEUE_NAME=Q3
    - K=5
    - NODE_ID=0
    - AMOUNT_OF_RECEIVING_QUEUES=3
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q4_filter_action_games0:
    image: filter_by_column_value:latest
    container_name: q4_action_games0
    environment:
    - NODE_ID=0
    - RECIVING_QUEUE_NAME=q4_games
    - FORWARDING_QUEUE_NAME=q4_action_games
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=DEBUG
    - COLUMN_NUMBER_TO_USE=2
    - VALUE_TO_FILTER_BY=action
    - CRITERIA=CONTAINS
    - COLUMNS_TO_KEEP=0,1
    - INSTANCES_OF_MYSELF=1
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q4_filter_negative0:
    image: filter_by_column_value:latest
    container_name: q4_negative0
    environment:
    - NODE_ID=0
    - RECIVING_QUEUE_NAME=q4_reviews
    - FORWARDING_QUEUE_NAME=q4_negative_reviews
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=DEBUG
    - COLUMN_NUMBER_TO_USE=2
    - VALUE_TO_FILTER_BY=-1.0
    - CRITERIA=EQUAL_FLOAT
    - COLUMNS_TO_KEEP=0,1,2
    - INSTANCES_OF_MYSELF=1
    - BATCH_SIZE=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q4_filter_english0:
    image: filter_by_column_value:latest
    container_name: q4_english0
    environment:
    - NODE_ID=0
    - RECIVING_QUEUE_NAME=0_q4_negative_reviews
    - FORWARDING_QUEUE_NAME=q4_english_reviews
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=DEBUG
    - COLUMN_NUMBER_TO_USE=1
    - VALUE_TO_FILTER_BY=en
    - CRITERIA=LANGUAGE
    - COLUMNS_TO_KEEP=0,1
    - INSTANCES_OF_MYSELF=1
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q4_counter0:
    container_name: q4_counter0
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=0
    - CONSUME_QUEUE_SUFIX=q4_english_reviews
    - PUBLISH_QUEUE=q4_english_review_count
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q4_counter1:
    container_name: q4_counter1
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=1
    - CONSUME_QUEUE_SUFIX=q4_english_reviews
    - PUBLISH_QUEUE=q4_english_review_count
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q4_filter_more_than_50000:
    image: filter_by_column_value:latest
    container_name: q4_more_than_50000
    environment:
    - NODE_ID=0
    - RECIVING_QUEUE_NAME=q4_english_review_count
    - FORWARDING_QUEUE_NAME=q4_filter_more_than_5000_reviews
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=DEBUG
    - COLUMN_NUMBER_TO_USE=1
    - VALUE_TO_FILTER_BY=5000
    - CRITERIA=GREATER_THAN
    - COLUMNS_TO_KEEP=0,1
    - INSTANCES_OF_MYSELF=1
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q4_join0:
    container_name: q4_join0
    image: join:latest
    environment:
    - INPUT_GAMES_QUEUE_NAME=0_q4_action_games
    - INPUT_REVIEWS_QUEUE_NAME=0_q4_filter_more_than_5000_reviews
    - OUTPUT_QUEUE_NAME=Q4
    - AMOUNT_OF_BEHIND_NODES=1
    - AMOUNT_OF_FORWARDING_QUEUES=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_filter_action_games0:
    image: filter_by_column_value:latest
    container_name: q5_action_games0
    environment:
    - NODE_ID=0
    - RECIVING_QUEUE_NAME=q5_games
    - FORWARDING_QUEUE_NAME=q5_shooter_games
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=2
    - VALUE_TO_FILTER_BY=action
    - CRITERIA=CONTAINS
    - COLUMNS_TO_KEEP=0,1
    - INSTANCES_OF_MYSELF=3
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_filter_action_games1:
    image: filter_by_column_value:latest
    container_name: q5_action_games1
    environment:
    - NODE_ID=1
    - RECIVING_QUEUE_NAME=q5_games
    - FORWARDING_QUEUE_NAME=q5_shooter_games
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=2
    - VALUE_TO_FILTER_BY=action
    - CRITERIA=CONTAINS
    - COLUMNS_TO_KEEP=0,1
    - INSTANCES_OF_MYSELF=3
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_filter_action_games2:
    image: filter_by_column_value:latest
    container_name: q5_action_games2
    environment:
    - NODE_ID=2
    - RECIVING_QUEUE_NAME=q5_games
    - FORWARDING_QUEUE_NAME=q5_shooter_games
    - AMOUNT_OF_FORWARDING_QUEUES=1
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=2
    - VALUE_TO_FILTER_BY=action
    - CRITERIA=CONTAINS
    - COLUMNS_TO_KEEP=0,1
    - INSTANCES_OF_MYSELF=3
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_filter_negative_reviews0:
    image: filter_by_column_value:latest
    container_name: q5_negative_reviews0
    environment:
    - NODE_ID=0
    - RECIVING_QUEUE_NAME=q5_reviews
    - FORWARDING_QUEUE_NAME=q5_negative_reviews
    - AMOUNT_OF_FORWARDING_QUEUES=5
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=1
    - VALUE_TO_FILTER_BY=-1.0
    - CRITERIA=EQUAL_FLOAT
    - COLUMNS_TO_KEEP=0
    - INSTANCES_OF_MYSELF=3
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_filter_negative_reviews1:
    image: filter_by_column_value:latest
    container_name: q5_negative_reviews1
    environment:
    - NODE_ID=1
    - RECIVING_QUEUE_NAME=q5_reviews
    - FORWARDING_QUEUE_NAME=q5_negative_reviews
    - AMOUNT_OF_FORWARDING_QUEUES=5
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=1
    - VALUE_TO_FILTER_BY=-1.0
    - CRITERIA=EQUAL_FLOAT
    - COLUMNS_TO_KEEP=0
    - INSTANCES_OF_MYSELF=3
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_filter_negative_reviews2:
    image: filter_by_column_value:latest
    container_name: q5_negative_reviews2
    environment:
    - NODE_ID=2
    - RECIVING_QUEUE_NAME=q5_reviews
    - FORWARDING_QUEUE_NAME=q5_negative_reviews
    - AMOUNT_OF_FORWARDING_QUEUES=5
    - LOGGING_LEVEL=INFO
    - COLUMN_NUMBER_TO_USE=1
    - VALUE_TO_FILTER_BY=-1.0
    - CRITERIA=EQUAL_FLOAT
    - COLUMNS_TO_KEEP=0
    - INSTANCES_OF_MYSELF=3
    - BATCH_SIZE=10
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_counter0:
    container_name: q5_counter0
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=0
    - CONSUME_QUEUE_SUFIX=q5_negative_reviews
    - PUBLISH_QUEUE=0_q5_counter
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_counter1:
    container_name: q5_counter1
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=1
    - CONSUME_QUEUE_SUFIX=q5_negative_reviews
    - PUBLISH_QUEUE=0_q5_counter
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_counter2:
    container_name: q5_counter2
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=2
    - CONSUME_QUEUE_SUFIX=q5_negative_reviews
    - PUBLISH_QUEUE=0_q5_counter
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_counter3:
    container_name: q5_counter3
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=3
    - CONSUME_QUEUE_SUFIX=q5_negative_reviews
    - PUBLISH_QUEUE=0_q5_counter
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_counter4:
    container_name: q5_counter4
    image: counter_by_app_id:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=4
    - CONSUME_QUEUE_SUFIX=q5_negative_reviews
    - PUBLISH_QUEUE=0_q5_counter
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_join0:
    container_name: q5_join0
    image: join:latest
    environment:
    - INPUT_GAMES_QUEUE_NAME=0_q5_shooter_games
    - INPUT_REVIEWS_QUEUE_NAME=0_q5_counter
    - OUTPUT_QUEUE_NAME=q5_percentile
    - AMOUNT_OF_BEHIND_NODES=5
    - AMOUNT_OF_FORWARDING_QUEUES=1
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
  q5_percentil_0:
    container_name: q5_percentile_0
    image: percentile:latest
    entrypoint: python3 /main.py
    environment:
    - NODE_ID=0
    - CONSUME_QUEUE=0_q5_percentile
    - PUBLISH_QUEUE=Q5
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
    - net
    restart: on-failure
volumes:
  rabbitmq_data: {}
networks:
  net:
    ipam:
      driver: default
      config:
      - subnet: 172.25.125.0/24
